   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"timerFunctionsLSM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	TimerId,4,4
  20              		.comm	Status,4,4
  21              		.comm	WriteTimerId,4,4
  22              		.comm	WriteTimerStatus,4,4
  23              		.comm	TimerIdReadBytes,4,4
  24              		.comm	StatusReadBytes,4,4
  25              		.comm	settings,40,4
  26              		.comm	gBias,12,4
  27              		.comm	aBias,12,4
  28              		.comm	mBias,12,4
  29              		.comm	gBiasRaw,6,4
  30              		.comm	aBiasRaw,6,4
  31              		.comm	mBiasRaw,6,4
  32              		.comm	_autoCalc,1,1
  33              		.comm	_mAddress,1,1
  34              		.comm	_xgAddress,1,1
  35              		.comm	gRes,4,4
  36              		.comm	aRes,4,4
  37              		.comm	mRes,4,4
  38              		.comm	gx,2,2
  39              		.comm	gy,2,2
  40              		.comm	gz,2,2
  41              		.comm	ax,2,2
  42              		.comm	ay,2,2
  43              		.comm	az,2,2
  44              		.comm	mx,2,2
  45              		.comm	my,2,2
  46              		.comm	mz,2,2
  47              		.comm	temperature,2,2
  48              		.global	indexI2CreadByte
  49              		.bss
  50              		.align	2
  53              	indexI2CreadByte:
  54 0000 00000000 		.space	4
  55              		.global	addressTimer
  58              	addressTimer:
  59 0004 00       		.space	1
  60              		.global	subAddressTimer
  63              	subAddressTimer:
  64 0005 00       		.space	1
  65              		.global	DataReceive2
  66              		.align	1
  69              	DataReceive2:
  70 0006 0000     		.space	2
  71              		.global	indexI2CreadBytes
  72              		.align	2
  75              	indexI2CreadBytes:
  76 0008 00000000 		.space	4
  77              		.global	addressTimerI2CReadBytes
  80              	addressTimerI2CReadBytes:
  81 000c 00       		.space	1
  82              		.global	subAddressTimerI2CReadBytes
  85              	subAddressTimerI2CReadBytes:
  86 000d 00       		.space	1
  87              		.global	indexI2CwriteByte
  88 000e 0000     		.align	2
  91              	indexI2CwriteByte:
  92 0010 00000000 		.space	4
  93              		.global	addressTimerWrite
  96              	addressTimerWrite:
  97 0014 00       		.space	1
  98              		.global	subAddressTimerWrite
 101              	subAddressTimerWrite:
 102 0015 00       		.space	1
 103              		.global	dataWrite
 106              	dataWrite:
 107 0016 00       		.space	1
 108              		.global	accelerationXYZ
 109 0017 00       		.align	2
 112              	accelerationXYZ:
 113 0018 00000000 		.space	12
 113      00000000 
 113      00000000 
 114              		.section	.text.timerHandlerI2CreadByte,"ax",%progbits
 115              		.align	2
 116              		.global	timerHandlerI2CreadByte
 117              		.thumb
 118              		.thumb_func
 120              	timerHandlerI2CreadByte:
 121              	.LFB112:
 122              		.file 1 "../timerFunctionsLSM.c"
   1:../timerFunctionsLSM.c **** /*
   2:../timerFunctionsLSM.c ****  * timerFunctionsLSM.c
   3:../timerFunctionsLSM.c ****  *
   4:../timerFunctionsLSM.c ****  *  Created on: 28-12-2015
   5:../timerFunctionsLSM.c ****  *      Author: Mateusz
   6:../timerFunctionsLSM.c ****  */
   7:../timerFunctionsLSM.c **** #include "timerFunctionsLSM.h"
   8:../timerFunctionsLSM.c **** #include "timerFunctions.h"
   9:../timerFunctionsLSM.c **** #include "LSM9DS1_drivers.h"
  10:../timerFunctionsLSM.c **** 
  11:../timerFunctionsLSM.c **** volatile unsigned int indexI2CreadByte = 0;
  12:../timerFunctionsLSM.c **** uint8_t addressTimer = 0;
  13:../timerFunctionsLSM.c **** uint8_t subAddressTimer = 0;
  14:../timerFunctionsLSM.c **** uint16_t DataReceive2 = 0x0000;
  15:../timerFunctionsLSM.c **** 
  16:../timerFunctionsLSM.c **** volatile unsigned int indexI2CreadBytes = 0;
  17:../timerFunctionsLSM.c **** uint8_t addressTimerI2CReadBytes = 0;
  18:../timerFunctionsLSM.c **** uint8_t subAddressTimerI2CReadBytes = 0;
  19:../timerFunctionsLSM.c **** 
  20:../timerFunctionsLSM.c **** volatile unsigned int indexI2CwriteByte = 0;
  21:../timerFunctionsLSM.c **** uint8_t addressTimerWrite = 0;
  22:../timerFunctionsLSM.c **** uint8_t subAddressTimerWrite = 0;
  23:../timerFunctionsLSM.c **** uint8_t dataWrite = 0;
  24:../timerFunctionsLSM.c **** 
  25:../timerFunctionsLSM.c **** uint16_t accelerationXYZ[6] = {0, 0, 0, 0, 0, 0};
  26:../timerFunctionsLSM.c **** 
  27:../timerFunctionsLSM.c **** void timerHandlerI2CreadByte(void *T)
  28:../timerFunctionsLSM.c **** {
 123              		.loc 1 28 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 32
 126              		@ frame_needed = 1, uses_anonymous_args = 0
 127 0000 80B5     		push	{r7, lr}
 128              	.LCFI0:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 7, -8
 131              		.cfi_offset 14, -4
 132 0002 88B0     		sub	sp, sp, #32
 133              	.LCFI1:
 134              		.cfi_def_cfa_offset 40
 135 0004 00AF     		add	r7, sp, #0
 136              	.LCFI2:
 137              		.cfi_def_cfa_register 7
 138 0006 7860     		str	r0, [r7, #4]
 139 0008 00E0     		b	.L16
 140              	.L17:
  29:../timerFunctionsLSM.c **** 	//I2C001_DataType data1,data2,data3,data4,data5, data6, data7;
  30:../timerFunctionsLSM.c **** 
  31:../timerFunctionsLSM.c **** 
  32:../timerFunctionsLSM.c **** 	//int timeout = LSM9DS1_COMMUNICATION_TIMEOUT;
  33:../timerFunctionsLSM.c **** 
  34:../timerFunctionsLSM.c **** 	uint8_t data; // `data` will store the register data
  35:../timerFunctionsLSM.c **** 
  36:../timerFunctionsLSM.c **** 	//wyslanie warunku startowego
  37:../timerFunctionsLSM.c **** 	while(1){
  38:../timerFunctionsLSM.c **** 	if(0 == indexI2CreadByte)
  39:../timerFunctionsLSM.c **** 	{
  40:../timerFunctionsLSM.c **** 		I2C001_DataType data1;
  41:../timerFunctionsLSM.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
  42:../timerFunctionsLSM.c **** 		data1.Data1.Data = ((addressTimer<<1) | I2C_WRITE);
  43:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
  44:../timerFunctionsLSM.c **** 		indexI2CreadByte++;
  45:../timerFunctionsLSM.c **** 	}
  46:../timerFunctionsLSM.c **** 	else if(1 == indexI2CreadByte)
  47:../timerFunctionsLSM.c **** 	{
  48:../timerFunctionsLSM.c **** 		I2C001_DataType data3;
  49:../timerFunctionsLSM.c **** 		data3.Data1.TDF_Type = I2C_TDF_MTxData;
  50:../timerFunctionsLSM.c **** 		data3.Data1.Data = subAddressTimer;
  51:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
  52:../timerFunctionsLSM.c **** 		indexI2CreadByte++;
  53:../timerFunctionsLSM.c **** 	}
  54:../timerFunctionsLSM.c **** 	else if(2 == indexI2CreadByte)
  55:../timerFunctionsLSM.c **** 	{
  56:../timerFunctionsLSM.c **** 		I2C001_DataType data5;
  57:../timerFunctionsLSM.c **** 		data5.Data1.TDF_Type = I2C_TDF_MRStart;
  58:../timerFunctionsLSM.c **** 		data5.Data1.Data = ((addressTimer<<1) | I2C_READ);
  59:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5));
  60:../timerFunctionsLSM.c **** 		indexI2CreadByte++;
  61:../timerFunctionsLSM.c **** 	}
  62:../timerFunctionsLSM.c **** 	else if(3 == indexI2CreadByte)
  63:../timerFunctionsLSM.c **** 	{
  64:../timerFunctionsLSM.c **** 		I2C001_DataType data6;
  65:../timerFunctionsLSM.c **** 		data6.Data1.TDF_Type = I2C_TDF_MRxAck1;
  66:../timerFunctionsLSM.c **** 		data6.Data1.Data = ubyteFF;
  67:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data6));
  68:../timerFunctionsLSM.c **** 		indexI2CreadByte++;
  69:../timerFunctionsLSM.c **** 	}
  70:../timerFunctionsLSM.c **** 	else if(4 == indexI2CreadByte)
  71:../timerFunctionsLSM.c **** 	{
  72:../timerFunctionsLSM.c **** 		I2C001_DataType data7;
  73:../timerFunctionsLSM.c **** 		data7.Data1.TDF_Type = I2C_TDF_MStop;
  74:../timerFunctionsLSM.c **** 		data7.Data1.Data = ubyteFF;
  75:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data7));
  76:../timerFunctionsLSM.c **** 		indexI2CreadByte++;
  77:../timerFunctionsLSM.c **** 	}
  78:../timerFunctionsLSM.c **** 	else if(5 == indexI2CreadByte)
  79:../timerFunctionsLSM.c **** 	{
  80:../timerFunctionsLSM.c **** 		while(!I2C001_ReadData(&I2C001_Handle0,&DataReceive2))
  81:../timerFunctionsLSM.c **** 		{
  82:../timerFunctionsLSM.c **** 			;
  83:../timerFunctionsLSM.c **** 		}
  84:../timerFunctionsLSM.c **** 		indexI2CreadByte++;
  85:../timerFunctionsLSM.c **** 	}
  86:../timerFunctionsLSM.c **** 	else if(6 == indexI2CreadByte)
  87:../timerFunctionsLSM.c **** 	{
  88:../timerFunctionsLSM.c **** 		break;
  89:../timerFunctionsLSM.c **** 	}
  90:../timerFunctionsLSM.c **** }
 141              		.loc 1 90 0
 142 000a 00BF     		nop
 143              	.L16:
  38:../timerFunctionsLSM.c **** 	if(0 == indexI2CreadByte)
 144              		.loc 1 38 0
 145 000c 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 146 0010 C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 147 0014 1B68     		ldr	r3, [r3, #0]
 148 0016 002B     		cmp	r3, #0
 149 0018 25D1     		bne	.L2
 150              	.LBB2:
  41:../timerFunctionsLSM.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 151              		.loc 1 41 0
 152 001a 4FF00403 		mov	r3, #4
 153 001e 7B77     		strb	r3, [r7, #29]
  42:../timerFunctionsLSM.c **** 		data1.Data1.Data = ((addressTimer<<1) | I2C_WRITE);
 154              		.loc 1 42 0
 155 0020 40F20003 		movw	r3, #:lower16:addressTimer
 156 0024 C0F20003 		movt	r3, #:upper16:addressTimer
 157 0028 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 158 002a 4FEA4303 		lsl	r3, r3, #1
 159 002e DBB2     		uxtb	r3, r3
 160 0030 3B77     		strb	r3, [r7, #28]
  43:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
 161              		.loc 1 43 0
 162 0032 00BF     		nop
 163              	.L3:
  43:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
 164              		.loc 1 43 0 is_stmt 0 discriminator 1
 165 0034 07F11C03 		add	r3, r7, #28
 166 0038 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 167 003c C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 168 0040 1946     		mov	r1, r3
 169 0042 FFF7FEFF 		bl	I2C001_WriteData
 170 0046 0346     		mov	r3, r0
 171 0048 002B     		cmp	r3, #0
 172 004a F3D0     		beq	.L3
  44:../timerFunctionsLSM.c **** 		indexI2CreadByte++;
 173              		.loc 1 44 0 is_stmt 1
 174 004c 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 175 0050 C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 176 0054 1B68     		ldr	r3, [r3, #0]
 177 0056 03F10102 		add	r2, r3, #1
 178 005a 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 179 005e C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 180 0062 1A60     		str	r2, [r3, #0]
 181              	.LBE2:
 182              		.loc 1 90 0
 183 0064 D1E7     		b	.L17
 184              	.L2:
  46:../timerFunctionsLSM.c **** 	else if(1 == indexI2CreadByte)
 185              		.loc 1 46 0
 186 0066 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 187 006a C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 188 006e 1B68     		ldr	r3, [r3, #0]
 189 0070 012B     		cmp	r3, #1
 190 0072 22D1     		bne	.L5
 191              	.LBB3:
  49:../timerFunctionsLSM.c **** 		data3.Data1.TDF_Type = I2C_TDF_MTxData;
 192              		.loc 1 49 0
 193 0074 4FF00003 		mov	r3, #0
 194 0078 7B76     		strb	r3, [r7, #25]
  50:../timerFunctionsLSM.c **** 		data3.Data1.Data = subAddressTimer;
 195              		.loc 1 50 0
 196 007a 40F20003 		movw	r3, #:lower16:subAddressTimer
 197 007e C0F20003 		movt	r3, #:upper16:subAddressTimer
 198 0082 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 199 0084 3B76     		strb	r3, [r7, #24]
  51:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
 200              		.loc 1 51 0
 201 0086 00BF     		nop
 202              	.L6:
  51:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
 203              		.loc 1 51 0 is_stmt 0 discriminator 1
 204 0088 07F11803 		add	r3, r7, #24
 205 008c 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 206 0090 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 207 0094 1946     		mov	r1, r3
 208 0096 FFF7FEFF 		bl	I2C001_WriteData
 209 009a 0346     		mov	r3, r0
 210 009c 002B     		cmp	r3, #0
 211 009e F3D0     		beq	.L6
  52:../timerFunctionsLSM.c **** 		indexI2CreadByte++;
 212              		.loc 1 52 0 is_stmt 1
 213 00a0 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 214 00a4 C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 215 00a8 1B68     		ldr	r3, [r3, #0]
 216 00aa 03F10102 		add	r2, r3, #1
 217 00ae 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 218 00b2 C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 219 00b6 1A60     		str	r2, [r3, #0]
 220              	.LBE3:
 221              		.loc 1 90 0
 222 00b8 A7E7     		b	.L17
 223              	.L5:
  54:../timerFunctionsLSM.c **** 	else if(2 == indexI2CreadByte)
 224              		.loc 1 54 0
 225 00ba 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 226 00be C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 227 00c2 1B68     		ldr	r3, [r3, #0]
 228 00c4 022B     		cmp	r3, #2
 229 00c6 28D1     		bne	.L7
 230              	.LBB4:
  57:../timerFunctionsLSM.c **** 		data5.Data1.TDF_Type = I2C_TDF_MRStart;
 231              		.loc 1 57 0
 232 00c8 4FF00503 		mov	r3, #5
 233 00cc 7B75     		strb	r3, [r7, #21]
  58:../timerFunctionsLSM.c **** 		data5.Data1.Data = ((addressTimer<<1) | I2C_READ);
 234              		.loc 1 58 0
 235 00ce 40F20003 		movw	r3, #:lower16:addressTimer
 236 00d2 C0F20003 		movt	r3, #:upper16:addressTimer
 237 00d6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 238 00d8 4FEA4303 		lsl	r3, r3, #1
 239 00dc DBB2     		uxtb	r3, r3
 240 00de 43F00103 		orr	r3, r3, #1
 241 00e2 DBB2     		uxtb	r3, r3
 242 00e4 3B75     		strb	r3, [r7, #20]
  59:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5));
 243              		.loc 1 59 0
 244 00e6 00BF     		nop
 245              	.L8:
  59:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5));
 246              		.loc 1 59 0 is_stmt 0 discriminator 1
 247 00e8 07F11403 		add	r3, r7, #20
 248 00ec 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 249 00f0 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 250 00f4 1946     		mov	r1, r3
 251 00f6 FFF7FEFF 		bl	I2C001_WriteData
 252 00fa 0346     		mov	r3, r0
 253 00fc 002B     		cmp	r3, #0
 254 00fe F3D0     		beq	.L8
  60:../timerFunctionsLSM.c **** 		indexI2CreadByte++;
 255              		.loc 1 60 0 is_stmt 1
 256 0100 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 257 0104 C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 258 0108 1B68     		ldr	r3, [r3, #0]
 259 010a 03F10102 		add	r2, r3, #1
 260 010e 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 261 0112 C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 262 0116 1A60     		str	r2, [r3, #0]
 263              	.LBE4:
 264              		.loc 1 90 0
 265 0118 77E7     		b	.L17
 266              	.L7:
  62:../timerFunctionsLSM.c **** 	else if(3 == indexI2CreadByte)
 267              		.loc 1 62 0
 268 011a 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 269 011e C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 270 0122 1B68     		ldr	r3, [r3, #0]
 271 0124 032B     		cmp	r3, #3
 272 0126 1FD1     		bne	.L9
 273              	.LBB5:
  65:../timerFunctionsLSM.c **** 		data6.Data1.TDF_Type = I2C_TDF_MRxAck1;
 274              		.loc 1 65 0
 275 0128 4FF00303 		mov	r3, #3
 276 012c 7B74     		strb	r3, [r7, #17]
  66:../timerFunctionsLSM.c **** 		data6.Data1.Data = ubyteFF;
 277              		.loc 1 66 0
 278 012e 4FF0FF03 		mov	r3, #255
 279 0132 3B74     		strb	r3, [r7, #16]
  67:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data6));
 280              		.loc 1 67 0
 281 0134 00BF     		nop
 282              	.L10:
  67:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data6));
 283              		.loc 1 67 0 is_stmt 0 discriminator 1
 284 0136 07F11003 		add	r3, r7, #16
 285 013a 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 286 013e C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 287 0142 1946     		mov	r1, r3
 288 0144 FFF7FEFF 		bl	I2C001_WriteData
 289 0148 0346     		mov	r3, r0
 290 014a 002B     		cmp	r3, #0
 291 014c F3D0     		beq	.L10
  68:../timerFunctionsLSM.c **** 		indexI2CreadByte++;
 292              		.loc 1 68 0 is_stmt 1
 293 014e 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 294 0152 C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 295 0156 1B68     		ldr	r3, [r3, #0]
 296 0158 03F10102 		add	r2, r3, #1
 297 015c 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 298 0160 C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 299 0164 1A60     		str	r2, [r3, #0]
 300              	.LBE5:
 301              		.loc 1 90 0
 302 0166 50E7     		b	.L17
 303              	.L9:
  70:../timerFunctionsLSM.c **** 	else if(4 == indexI2CreadByte)
 304              		.loc 1 70 0
 305 0168 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 306 016c C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 307 0170 1B68     		ldr	r3, [r3, #0]
 308 0172 042B     		cmp	r3, #4
 309 0174 1FD1     		bne	.L11
 310              	.LBB6:
  73:../timerFunctionsLSM.c **** 		data7.Data1.TDF_Type = I2C_TDF_MStop;
 311              		.loc 1 73 0
 312 0176 4FF00603 		mov	r3, #6
 313 017a 7B73     		strb	r3, [r7, #13]
  74:../timerFunctionsLSM.c **** 		data7.Data1.Data = ubyteFF;
 314              		.loc 1 74 0
 315 017c 4FF0FF03 		mov	r3, #255
 316 0180 3B73     		strb	r3, [r7, #12]
  75:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data7));
 317              		.loc 1 75 0
 318 0182 00BF     		nop
 319              	.L12:
  75:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data7));
 320              		.loc 1 75 0 is_stmt 0 discriminator 1
 321 0184 07F10C03 		add	r3, r7, #12
 322 0188 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 323 018c C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 324 0190 1946     		mov	r1, r3
 325 0192 FFF7FEFF 		bl	I2C001_WriteData
 326 0196 0346     		mov	r3, r0
 327 0198 002B     		cmp	r3, #0
 328 019a F3D0     		beq	.L12
  76:../timerFunctionsLSM.c **** 		indexI2CreadByte++;
 329              		.loc 1 76 0 is_stmt 1
 330 019c 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 331 01a0 C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 332 01a4 1B68     		ldr	r3, [r3, #0]
 333 01a6 03F10102 		add	r2, r3, #1
 334 01aa 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 335 01ae C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 336 01b2 1A60     		str	r2, [r3, #0]
 337              	.LBE6:
 338              		.loc 1 90 0
 339 01b4 29E7     		b	.L17
 340              	.L11:
  78:../timerFunctionsLSM.c **** 	else if(5 == indexI2CreadByte)
 341              		.loc 1 78 0
 342 01b6 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 343 01ba C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 344 01be 1B68     		ldr	r3, [r3, #0]
 345 01c0 052B     		cmp	r3, #5
 346 01c2 1AD1     		bne	.L13
  80:../timerFunctionsLSM.c **** 		while(!I2C001_ReadData(&I2C001_Handle0,&DataReceive2))
 347              		.loc 1 80 0
 348 01c4 00BF     		nop
 349              	.L14:
  80:../timerFunctionsLSM.c **** 		while(!I2C001_ReadData(&I2C001_Handle0,&DataReceive2))
 350              		.loc 1 80 0 is_stmt 0 discriminator 1
 351 01c6 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 352 01ca C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 353 01ce 40F20001 		movw	r1, #:lower16:DataReceive2
 354 01d2 C0F20001 		movt	r1, #:upper16:DataReceive2
 355 01d6 FFF7FEFF 		bl	I2C001_ReadData
 356 01da 0346     		mov	r3, r0
 357 01dc 002B     		cmp	r3, #0
 358 01de F2D0     		beq	.L14
  84:../timerFunctionsLSM.c **** 		indexI2CreadByte++;
 359              		.loc 1 84 0 is_stmt 1
 360 01e0 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 361 01e4 C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 362 01e8 1B68     		ldr	r3, [r3, #0]
 363 01ea 03F10102 		add	r2, r3, #1
 364 01ee 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 365 01f2 C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 366 01f6 1A60     		str	r2, [r3, #0]
 367              		.loc 1 90 0
 368 01f8 07E7     		b	.L17
 369              	.L13:
  86:../timerFunctionsLSM.c **** 	else if(6 == indexI2CreadByte)
 370              		.loc 1 86 0
 371 01fa 40F20003 		movw	r3, #:lower16:indexI2CreadByte
 372 01fe C0F20003 		movt	r3, #:upper16:indexI2CreadByte
 373 0202 1B68     		ldr	r3, [r3, #0]
 374 0204 062B     		cmp	r3, #6
 375 0206 7FF400AF 		bne	.L17
  88:../timerFunctionsLSM.c **** 		break;
 376              		.loc 1 88 0
 377 020a 00BF     		nop
  91:../timerFunctionsLSM.c **** }
 378              		.loc 1 91 0
 379 020c 07F12007 		add	r7, r7, #32
 380 0210 BD46     		mov	sp, r7
 381 0212 80BD     		pop	{r7, pc}
 382              		.cfi_endproc
 383              	.LFE112:
 385              		.section	.text.delay,"ax",%progbits
 386              		.align	2
 387              		.global	delay
 388              		.thumb
 389              		.thumb_func
 391              	delay:
 392              	.LFB113:
  92:../timerFunctionsLSM.c **** 
  93:../timerFunctionsLSM.c **** void delay(void)
  94:../timerFunctionsLSM.c **** {
 393              		.loc 1 94 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 8
 396              		@ frame_needed = 1, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 398 0000 80B4     		push	{r7}
 399              	.LCFI3:
 400              		.cfi_def_cfa_offset 4
 401              		.cfi_offset 7, -4
 402 0002 83B0     		sub	sp, sp, #12
 403              	.LCFI4:
 404              		.cfi_def_cfa_offset 16
 405 0004 00AF     		add	r7, sp, #0
 406              	.LCFI5:
 407              		.cfi_def_cfa_register 7
 408              	.LBB7:
  95:../timerFunctionsLSM.c **** 	for(int e = 0; e < 400; e++);
 409              		.loc 1 95 0
 410 0006 4FF00003 		mov	r3, #0
 411 000a 7B60     		str	r3, [r7, #4]
 412 000c 03E0     		b	.L19
 413              	.L20:
 414              		.loc 1 95 0 is_stmt 0 discriminator 2
 415 000e 7B68     		ldr	r3, [r7, #4]
 416 0010 03F10103 		add	r3, r3, #1
 417 0014 7B60     		str	r3, [r7, #4]
 418              	.L19:
 419              		.loc 1 95 0 discriminator 1
 420 0016 7A68     		ldr	r2, [r7, #4]
 421 0018 40F28F13 		movw	r3, #399
 422 001c 9A42     		cmp	r2, r3
 423 001e F6DD     		ble	.L20
 424              	.LBE7:
  96:../timerFunctionsLSM.c **** }
 425              		.loc 1 96 0 is_stmt 1
 426 0020 07F10C07 		add	r7, r7, #12
 427 0024 BD46     		mov	sp, r7
 428 0026 80BC     		pop	{r7}
 429 0028 7047     		bx	lr
 430              		.cfi_endproc
 431              	.LFE113:
 433 002a 00BF     		.section	.text.timerHandlerI2CreadBytes,"ax",%progbits
 434              		.align	2
 435              		.global	timerHandlerI2CreadBytes
 436              		.thumb
 437              		.thumb_func
 439              	timerHandlerI2CreadBytes:
 440              	.LFB114:
  97:../timerFunctionsLSM.c **** 
  98:../timerFunctionsLSM.c **** void timerHandlerI2CreadBytes(void *T)
  99:../timerFunctionsLSM.c **** {
 441              		.loc 1 99 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 32
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445 0000 80B5     		push	{r7, lr}
 446              	.LCFI6:
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 7, -8
 449              		.cfi_offset 14, -4
 450 0002 88B0     		sub	sp, sp, #32
 451              	.LCFI7:
 452              		.cfi_def_cfa_offset 40
 453 0004 00AF     		add	r7, sp, #0
 454              	.LCFI8:
 455              		.cfi_def_cfa_register 7
 456 0006 7860     		str	r0, [r7, #4]
 457 0008 00E0     		b	.L35
 458              	.L36:
 100:../timerFunctionsLSM.c **** 	while(1){
 101:../timerFunctionsLSM.c **** 	if(0 == indexI2CreadBytes)
 102:../timerFunctionsLSM.c **** 	{
 103:../timerFunctionsLSM.c **** 		I2C001_DataType data1;
 104:../timerFunctionsLSM.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 105:../timerFunctionsLSM.c **** 		data1.Data1.Data = ((addressTimerI2CReadBytes<<1) | I2C_WRITE);
 106:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
 107:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 108:../timerFunctionsLSM.c **** 		delay();
 109:../timerFunctionsLSM.c **** 	}
 110:../timerFunctionsLSM.c **** 	else if(1 == indexI2CreadBytes)
 111:../timerFunctionsLSM.c **** 	{
 112:../timerFunctionsLSM.c **** 		I2C001_DataType data2;
 113:../timerFunctionsLSM.c **** 		data2.Data1.TDF_Type = I2C_TDF_MTxData;
 114:../timerFunctionsLSM.c **** 		data2.Data1.Data = (subAddressTimerI2CReadBytes);
 115:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2));
 116:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 117:../timerFunctionsLSM.c **** 		delay();
 118:../timerFunctionsLSM.c **** 	}
 119:../timerFunctionsLSM.c **** 	else if(2 == indexI2CreadBytes)
 120:../timerFunctionsLSM.c **** 	{
 121:../timerFunctionsLSM.c **** 		I2C001_DataType data3;
 122:../timerFunctionsLSM.c **** 		data3.Data1.TDF_Type = I2C_TDF_MRStart;
 123:../timerFunctionsLSM.c **** 		data3.Data1.Data = ((addressTimerI2CReadBytes<<1) | I2C_READ);
 124:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
 125:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 126:../timerFunctionsLSM.c **** 		delay();
 127:../timerFunctionsLSM.c **** 	}
 128:../timerFunctionsLSM.c **** 	else if(3 == indexI2CreadBytes)
 129:../timerFunctionsLSM.c **** 	{
 130:../timerFunctionsLSM.c **** 		I2C001_DataType data4;
 131:../timerFunctionsLSM.c **** 		/*for(int i = 0; i < 6; i++)
 132:../timerFunctionsLSM.c **** 		{
 133:../timerFunctionsLSM.c **** 			if(i !=5)
 134:../timerFunctionsLSM.c **** 			{*/
 135:../timerFunctionsLSM.c **** 				/*data4.Data1.TDF_Type = I2C_TDF_MRxAck0;
 136:../timerFunctionsLSM.c **** 			}
 137:../timerFunctionsLSM.c **** 			else
 138:../timerFunctionsLSM.c **** 			{*/
 139:../timerFunctionsLSM.c **** 				data4.Data1.TDF_Type = I2C_TDF_MRxAck1;
 140:../timerFunctionsLSM.c **** 			//}
 141:../timerFunctionsLSM.c **** 			data4.Data1.Data = ubyteFF;
 142:../timerFunctionsLSM.c **** 			while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 143:../timerFunctionsLSM.c **** 			{
 144:../timerFunctionsLSM.c **** 				;
 145:../timerFunctionsLSM.c **** 			}
 146:../timerFunctionsLSM.c **** 			delay();
 147:../timerFunctionsLSM.c **** 			while(!I2C001_ReadData(&I2C001_Handle0,&accelerationXYZ[indexAccel]))
 148:../timerFunctionsLSM.c **** 			{
 149:../timerFunctionsLSM.c **** 				;
 150:../timerFunctionsLSM.c **** 			}
 151:../timerFunctionsLSM.c **** 			delay();
 152:../timerFunctionsLSM.c **** 		//}
 153:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 154:../timerFunctionsLSM.c **** 	}
 155:../timerFunctionsLSM.c **** 	else if(4 == indexI2CreadBytes)
 156:../timerFunctionsLSM.c **** 	{
 157:../timerFunctionsLSM.c **** 		I2C001_DataType data5;
 158:../timerFunctionsLSM.c **** 		data5.Data1.TDF_Type = I2C_TDF_MStop;
 159:../timerFunctionsLSM.c **** 		data5.Data1.Data = ubyteFF;
 160:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5));
 161:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 162:../timerFunctionsLSM.c **** 	}
 163:../timerFunctionsLSM.c **** 	else if(indexI2CreadBytes == 5)
 164:../timerFunctionsLSM.c **** 	{
 165:../timerFunctionsLSM.c **** 		break;
 166:../timerFunctionsLSM.c **** 	}
 167:../timerFunctionsLSM.c **** 	}
 459              		.loc 1 167 0
 460 000a 00BF     		nop
 461              	.L35:
 101:../timerFunctionsLSM.c **** 	if(0 == indexI2CreadBytes)
 462              		.loc 1 101 0
 463 000c 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 464 0010 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 465 0014 1B68     		ldr	r3, [r3, #0]
 466 0016 002B     		cmp	r3, #0
 467 0018 27D1     		bne	.L22
 468              	.LBB8:
 104:../timerFunctionsLSM.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 469              		.loc 1 104 0
 470 001a 4FF00403 		mov	r3, #4
 471 001e 7B77     		strb	r3, [r7, #29]
 105:../timerFunctionsLSM.c **** 		data1.Data1.Data = ((addressTimerI2CReadBytes<<1) | I2C_WRITE);
 472              		.loc 1 105 0
 473 0020 40F20003 		movw	r3, #:lower16:addressTimerI2CReadBytes
 474 0024 C0F20003 		movt	r3, #:upper16:addressTimerI2CReadBytes
 475 0028 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 476 002a 4FEA4303 		lsl	r3, r3, #1
 477 002e DBB2     		uxtb	r3, r3
 478 0030 3B77     		strb	r3, [r7, #28]
 106:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
 479              		.loc 1 106 0
 480 0032 00BF     		nop
 481              	.L23:
 106:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
 482              		.loc 1 106 0 is_stmt 0 discriminator 1
 483 0034 07F11C03 		add	r3, r7, #28
 484 0038 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 485 003c C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 486 0040 1946     		mov	r1, r3
 487 0042 FFF7FEFF 		bl	I2C001_WriteData
 488 0046 0346     		mov	r3, r0
 489 0048 002B     		cmp	r3, #0
 490 004a F3D0     		beq	.L23
 107:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 491              		.loc 1 107 0 is_stmt 1
 492 004c 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 493 0050 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 494 0054 1B68     		ldr	r3, [r3, #0]
 495 0056 03F10102 		add	r2, r3, #1
 496 005a 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 497 005e C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 498 0062 1A60     		str	r2, [r3, #0]
 108:../timerFunctionsLSM.c **** 		delay();
 499              		.loc 1 108 0
 500 0064 FFF7FEFF 		bl	delay
 501              	.LBE8:
 502              		.loc 1 167 0
 503 0068 CFE7     		b	.L36
 504              	.L22:
 110:../timerFunctionsLSM.c **** 	else if(1 == indexI2CreadBytes)
 505              		.loc 1 110 0
 506 006a 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 507 006e C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 508 0072 1B68     		ldr	r3, [r3, #0]
 509 0074 012B     		cmp	r3, #1
 510 0076 24D1     		bne	.L25
 511              	.LBB9:
 113:../timerFunctionsLSM.c **** 		data2.Data1.TDF_Type = I2C_TDF_MTxData;
 512              		.loc 1 113 0
 513 0078 4FF00003 		mov	r3, #0
 514 007c 7B76     		strb	r3, [r7, #25]
 114:../timerFunctionsLSM.c **** 		data2.Data1.Data = (subAddressTimerI2CReadBytes);
 515              		.loc 1 114 0
 516 007e 40F20003 		movw	r3, #:lower16:subAddressTimerI2CReadBytes
 517 0082 C0F20003 		movt	r3, #:upper16:subAddressTimerI2CReadBytes
 518 0086 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 519 0088 3B76     		strb	r3, [r7, #24]
 115:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2));
 520              		.loc 1 115 0
 521 008a 00BF     		nop
 522              	.L26:
 115:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2));
 523              		.loc 1 115 0 is_stmt 0 discriminator 1
 524 008c 07F11803 		add	r3, r7, #24
 525 0090 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 526 0094 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 527 0098 1946     		mov	r1, r3
 528 009a FFF7FEFF 		bl	I2C001_WriteData
 529 009e 0346     		mov	r3, r0
 530 00a0 002B     		cmp	r3, #0
 531 00a2 F3D0     		beq	.L26
 116:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 532              		.loc 1 116 0 is_stmt 1
 533 00a4 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 534 00a8 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 535 00ac 1B68     		ldr	r3, [r3, #0]
 536 00ae 03F10102 		add	r2, r3, #1
 537 00b2 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 538 00b6 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 539 00ba 1A60     		str	r2, [r3, #0]
 117:../timerFunctionsLSM.c **** 		delay();
 540              		.loc 1 117 0
 541 00bc FFF7FEFF 		bl	delay
 542              	.LBE9:
 543              		.loc 1 167 0
 544 00c0 A3E7     		b	.L36
 545              	.L25:
 119:../timerFunctionsLSM.c **** 	else if(2 == indexI2CreadBytes)
 546              		.loc 1 119 0
 547 00c2 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 548 00c6 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 549 00ca 1B68     		ldr	r3, [r3, #0]
 550 00cc 022B     		cmp	r3, #2
 551 00ce 2AD1     		bne	.L27
 552              	.LBB10:
 122:../timerFunctionsLSM.c **** 		data3.Data1.TDF_Type = I2C_TDF_MRStart;
 553              		.loc 1 122 0
 554 00d0 4FF00503 		mov	r3, #5
 555 00d4 7B75     		strb	r3, [r7, #21]
 123:../timerFunctionsLSM.c **** 		data3.Data1.Data = ((addressTimerI2CReadBytes<<1) | I2C_READ);
 556              		.loc 1 123 0
 557 00d6 40F20003 		movw	r3, #:lower16:addressTimerI2CReadBytes
 558 00da C0F20003 		movt	r3, #:upper16:addressTimerI2CReadBytes
 559 00de 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 560 00e0 4FEA4303 		lsl	r3, r3, #1
 561 00e4 DBB2     		uxtb	r3, r3
 562 00e6 43F00103 		orr	r3, r3, #1
 563 00ea DBB2     		uxtb	r3, r3
 564 00ec 3B75     		strb	r3, [r7, #20]
 124:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
 565              		.loc 1 124 0
 566 00ee 00BF     		nop
 567              	.L28:
 124:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
 568              		.loc 1 124 0 is_stmt 0 discriminator 1
 569 00f0 07F11403 		add	r3, r7, #20
 570 00f4 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 571 00f8 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 572 00fc 1946     		mov	r1, r3
 573 00fe FFF7FEFF 		bl	I2C001_WriteData
 574 0102 0346     		mov	r3, r0
 575 0104 002B     		cmp	r3, #0
 576 0106 F3D0     		beq	.L28
 125:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 577              		.loc 1 125 0 is_stmt 1
 578 0108 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 579 010c C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 580 0110 1B68     		ldr	r3, [r3, #0]
 581 0112 03F10102 		add	r2, r3, #1
 582 0116 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 583 011a C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 584 011e 1A60     		str	r2, [r3, #0]
 126:../timerFunctionsLSM.c **** 		delay();
 585              		.loc 1 126 0
 586 0120 FFF7FEFF 		bl	delay
 587              	.LBE10:
 588              		.loc 1 167 0
 589 0124 71E7     		b	.L36
 590              	.L27:
 128:../timerFunctionsLSM.c **** 	else if(3 == indexI2CreadBytes)
 591              		.loc 1 128 0
 592 0126 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 593 012a C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 594 012e 1B68     		ldr	r3, [r3, #0]
 595 0130 032B     		cmp	r3, #3
 596 0132 3AD1     		bne	.L29
 597              	.LBB11:
 139:../timerFunctionsLSM.c **** 				data4.Data1.TDF_Type = I2C_TDF_MRxAck1;
 598              		.loc 1 139 0
 599 0134 4FF00303 		mov	r3, #3
 600 0138 7B74     		strb	r3, [r7, #17]
 141:../timerFunctionsLSM.c **** 			data4.Data1.Data = ubyteFF;
 601              		.loc 1 141 0
 602 013a 4FF0FF03 		mov	r3, #255
 603 013e 3B74     		strb	r3, [r7, #16]
 142:../timerFunctionsLSM.c **** 			while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 604              		.loc 1 142 0
 605 0140 00BF     		nop
 606              	.L30:
 142:../timerFunctionsLSM.c **** 			while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 607              		.loc 1 142 0 is_stmt 0 discriminator 1
 608 0142 07F11003 		add	r3, r7, #16
 609 0146 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 610 014a C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 611 014e 1946     		mov	r1, r3
 612 0150 FFF7FEFF 		bl	I2C001_WriteData
 613 0154 0346     		mov	r3, r0
 614 0156 002B     		cmp	r3, #0
 615 0158 F3D0     		beq	.L30
 146:../timerFunctionsLSM.c **** 			delay();
 616              		.loc 1 146 0 is_stmt 1
 617 015a FFF7FEFF 		bl	delay
 147:../timerFunctionsLSM.c **** 			while(!I2C001_ReadData(&I2C001_Handle0,&accelerationXYZ[indexAccel]))
 618              		.loc 1 147 0
 619 015e 00BF     		nop
 620              	.L31:
 147:../timerFunctionsLSM.c **** 			while(!I2C001_ReadData(&I2C001_Handle0,&accelerationXYZ[indexAccel]))
 621              		.loc 1 147 0 is_stmt 0 discriminator 1
 622 0160 40F20003 		movw	r3, #:lower16:indexAccel
 623 0164 C0F20003 		movt	r3, #:upper16:indexAccel
 624 0168 1B68     		ldr	r3, [r3, #0]
 625 016a 4FEA4302 		lsl	r2, r3, #1
 626 016e 40F20003 		movw	r3, #:lower16:accelerationXYZ
 627 0172 C0F20003 		movt	r3, #:upper16:accelerationXYZ
 628 0176 D318     		adds	r3, r2, r3
 629 0178 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 630 017c C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 631 0180 1946     		mov	r1, r3
 632 0182 FFF7FEFF 		bl	I2C001_ReadData
 633 0186 0346     		mov	r3, r0
 634 0188 002B     		cmp	r3, #0
 635 018a E9D0     		beq	.L31
 151:../timerFunctionsLSM.c **** 			delay();
 636              		.loc 1 151 0 is_stmt 1
 637 018c FFF7FEFF 		bl	delay
 153:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 638              		.loc 1 153 0
 639 0190 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 640 0194 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 641 0198 1B68     		ldr	r3, [r3, #0]
 642 019a 03F10102 		add	r2, r3, #1
 643 019e 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 644 01a2 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 645 01a6 1A60     		str	r2, [r3, #0]
 646              	.LBE11:
 647              		.loc 1 167 0
 648 01a8 2FE7     		b	.L36
 649              	.L29:
 155:../timerFunctionsLSM.c **** 	else if(4 == indexI2CreadBytes)
 650              		.loc 1 155 0
 651 01aa 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 652 01ae C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 653 01b2 1B68     		ldr	r3, [r3, #0]
 654 01b4 042B     		cmp	r3, #4
 655 01b6 1FD1     		bne	.L32
 656              	.LBB12:
 158:../timerFunctionsLSM.c **** 		data5.Data1.TDF_Type = I2C_TDF_MStop;
 657              		.loc 1 158 0
 658 01b8 4FF00603 		mov	r3, #6
 659 01bc 7B73     		strb	r3, [r7, #13]
 159:../timerFunctionsLSM.c **** 		data5.Data1.Data = ubyteFF;
 660              		.loc 1 159 0
 661 01be 4FF0FF03 		mov	r3, #255
 662 01c2 3B73     		strb	r3, [r7, #12]
 160:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5));
 663              		.loc 1 160 0
 664 01c4 00BF     		nop
 665              	.L33:
 160:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5));
 666              		.loc 1 160 0 is_stmt 0 discriminator 1
 667 01c6 07F10C03 		add	r3, r7, #12
 668 01ca 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 669 01ce C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 670 01d2 1946     		mov	r1, r3
 671 01d4 FFF7FEFF 		bl	I2C001_WriteData
 672 01d8 0346     		mov	r3, r0
 673 01da 002B     		cmp	r3, #0
 674 01dc F3D0     		beq	.L33
 161:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 675              		.loc 1 161 0 is_stmt 1
 676 01de 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 677 01e2 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 678 01e6 1B68     		ldr	r3, [r3, #0]
 679 01e8 03F10102 		add	r2, r3, #1
 680 01ec 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 681 01f0 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 682 01f4 1A60     		str	r2, [r3, #0]
 683              	.LBE12:
 684              		.loc 1 167 0
 685 01f6 08E7     		b	.L36
 686              	.L32:
 163:../timerFunctionsLSM.c **** 	else if(indexI2CreadBytes == 5)
 687              		.loc 1 163 0
 688 01f8 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 689 01fc C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 690 0200 1B68     		ldr	r3, [r3, #0]
 691 0202 052B     		cmp	r3, #5
 692 0204 7FF401AF 		bne	.L36
 165:../timerFunctionsLSM.c **** 		break;
 693              		.loc 1 165 0
 694 0208 00BF     		nop
 168:../timerFunctionsLSM.c **** }
 695              		.loc 1 168 0
 696 020a 07F12007 		add	r7, r7, #32
 697 020e BD46     		mov	sp, r7
 698 0210 80BD     		pop	{r7, pc}
 699              		.cfi_endproc
 700              	.LFE114:
 702 0212 00BF     		.section	.text.timerHandlerI2CreadBytes1,"ax",%progbits
 703              		.align	2
 704              		.global	timerHandlerI2CreadBytes1
 705              		.thumb
 706              		.thumb_func
 708              	timerHandlerI2CreadBytes1:
 709              	.LFB115:
 169:../timerFunctionsLSM.c **** 
 170:../timerFunctionsLSM.c **** 
 171:../timerFunctionsLSM.c **** void timerHandlerI2CreadBytes1(void *T)
 172:../timerFunctionsLSM.c **** {
 710              		.loc 1 172 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 32
 713              		@ frame_needed = 1, uses_anonymous_args = 0
 714 0000 80B5     		push	{r7, lr}
 715              	.LCFI9:
 716              		.cfi_def_cfa_offset 8
 717              		.cfi_offset 7, -8
 718              		.cfi_offset 14, -4
 719 0002 88B0     		sub	sp, sp, #32
 720              	.LCFI10:
 721              		.cfi_def_cfa_offset 40
 722 0004 00AF     		add	r7, sp, #0
 723              	.LCFI11:
 724              		.cfi_def_cfa_register 7
 725 0006 7860     		str	r0, [r7, #4]
 173:../timerFunctionsLSM.c **** 	if(0 == indexI2CreadBytes)
 726              		.loc 1 173 0
 727 0008 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 728 000c C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 729 0010 1B68     		ldr	r3, [r3, #0]
 730 0012 002B     		cmp	r3, #0
 731 0014 25D1     		bne	.L38
 732              	.LBB13:
 174:../timerFunctionsLSM.c **** 	{
 175:../timerFunctionsLSM.c **** 		I2C001_DataType data1;
 176:../timerFunctionsLSM.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 733              		.loc 1 176 0
 734 0016 4FF00403 		mov	r3, #4
 735 001a 7B77     		strb	r3, [r7, #29]
 177:../timerFunctionsLSM.c **** 		data1.Data1.Data = ((addressTimerI2CReadBytes<<1) | I2C_WRITE);
 736              		.loc 1 177 0
 737 001c 40F20003 		movw	r3, #:lower16:addressTimerI2CReadBytes
 738 0020 C0F20003 		movt	r3, #:upper16:addressTimerI2CReadBytes
 739 0024 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 740 0026 4FEA4303 		lsl	r3, r3, #1
 741 002a DBB2     		uxtb	r3, r3
 742 002c 3B77     		strb	r3, [r7, #28]
 178:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
 743              		.loc 1 178 0
 744 002e 00BF     		nop
 745              	.L39:
 746              		.loc 1 178 0 is_stmt 0 discriminator 1
 747 0030 07F11C03 		add	r3, r7, #28
 748 0034 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 749 0038 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 750 003c 1946     		mov	r1, r3
 751 003e FFF7FEFF 		bl	I2C001_WriteData
 752 0042 0346     		mov	r3, r0
 753 0044 002B     		cmp	r3, #0
 754 0046 F3D0     		beq	.L39
 179:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 755              		.loc 1 179 0 is_stmt 1
 756 0048 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 757 004c C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 758 0050 1B68     		ldr	r3, [r3, #0]
 759 0052 03F10102 		add	r2, r3, #1
 760 0056 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 761 005a C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 762 005e 1A60     		str	r2, [r3, #0]
 763 0060 3BE1     		b	.L37
 764              	.L38:
 765              	.LBE13:
 180:../timerFunctionsLSM.c **** 	}
 181:../timerFunctionsLSM.c **** 	else if(1 == indexI2CreadBytes)
 766              		.loc 1 181 0
 767 0062 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 768 0066 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 769 006a 1B68     		ldr	r3, [r3, #0]
 770 006c 012B     		cmp	r3, #1
 771 006e 22D1     		bne	.L41
 772              	.LBB14:
 182:../timerFunctionsLSM.c **** 	{
 183:../timerFunctionsLSM.c **** 		I2C001_DataType data2;
 184:../timerFunctionsLSM.c **** 		data2.Data1.TDF_Type = I2C_TDF_MTxData;
 773              		.loc 1 184 0
 774 0070 4FF00003 		mov	r3, #0
 775 0074 7B76     		strb	r3, [r7, #25]
 185:../timerFunctionsLSM.c **** 		data2.Data1.Data = (subAddressTimerI2CReadBytes);
 776              		.loc 1 185 0
 777 0076 40F20003 		movw	r3, #:lower16:subAddressTimerI2CReadBytes
 778 007a C0F20003 		movt	r3, #:upper16:subAddressTimerI2CReadBytes
 779 007e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 780 0080 3B76     		strb	r3, [r7, #24]
 186:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2));
 781              		.loc 1 186 0
 782 0082 00BF     		nop
 783              	.L42:
 784              		.loc 1 186 0 is_stmt 0 discriminator 1
 785 0084 07F11803 		add	r3, r7, #24
 786 0088 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 787 008c C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 788 0090 1946     		mov	r1, r3
 789 0092 FFF7FEFF 		bl	I2C001_WriteData
 790 0096 0346     		mov	r3, r0
 791 0098 002B     		cmp	r3, #0
 792 009a F3D0     		beq	.L42
 187:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 793              		.loc 1 187 0 is_stmt 1
 794 009c 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 795 00a0 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 796 00a4 1B68     		ldr	r3, [r3, #0]
 797 00a6 03F10102 		add	r2, r3, #1
 798 00aa 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 799 00ae C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 800 00b2 1A60     		str	r2, [r3, #0]
 801 00b4 11E1     		b	.L37
 802              	.L41:
 803              	.LBE14:
 188:../timerFunctionsLSM.c **** 	}
 189:../timerFunctionsLSM.c **** 	else if(2 == indexI2CreadBytes)
 804              		.loc 1 189 0
 805 00b6 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 806 00ba C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 807 00be 1B68     		ldr	r3, [r3, #0]
 808 00c0 022B     		cmp	r3, #2
 809 00c2 28D1     		bne	.L43
 810              	.LBB15:
 190:../timerFunctionsLSM.c **** 	{
 191:../timerFunctionsLSM.c **** 		I2C001_DataType data3;
 192:../timerFunctionsLSM.c **** 		data3.Data1.TDF_Type = I2C_TDF_MRStart;
 811              		.loc 1 192 0
 812 00c4 4FF00503 		mov	r3, #5
 813 00c8 7B75     		strb	r3, [r7, #21]
 193:../timerFunctionsLSM.c **** 		data3.Data1.Data = ((addressTimerI2CReadBytes<<1) | I2C_READ);
 814              		.loc 1 193 0
 815 00ca 40F20003 		movw	r3, #:lower16:addressTimerI2CReadBytes
 816 00ce C0F20003 		movt	r3, #:upper16:addressTimerI2CReadBytes
 817 00d2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 818 00d4 4FEA4303 		lsl	r3, r3, #1
 819 00d8 DBB2     		uxtb	r3, r3
 820 00da 43F00103 		orr	r3, r3, #1
 821 00de DBB2     		uxtb	r3, r3
 822 00e0 3B75     		strb	r3, [r7, #20]
 194:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
 823              		.loc 1 194 0
 824 00e2 00BF     		nop
 825              	.L44:
 826              		.loc 1 194 0 is_stmt 0 discriminator 1
 827 00e4 07F11403 		add	r3, r7, #20
 828 00e8 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 829 00ec C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 830 00f0 1946     		mov	r1, r3
 831 00f2 FFF7FEFF 		bl	I2C001_WriteData
 832 00f6 0346     		mov	r3, r0
 833 00f8 002B     		cmp	r3, #0
 834 00fa F3D0     		beq	.L44
 195:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 835              		.loc 1 195 0 is_stmt 1
 836 00fc 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 837 0100 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 838 0104 1B68     		ldr	r3, [r3, #0]
 839 0106 03F10102 		add	r2, r3, #1
 840 010a 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 841 010e C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 842 0112 1A60     		str	r2, [r3, #0]
 843 0114 E1E0     		b	.L37
 844              	.L43:
 845              	.LBE15:
 196:../timerFunctionsLSM.c **** 	}
 197:../timerFunctionsLSM.c **** 	else if(3 == indexI2CreadBytes)
 846              		.loc 1 197 0
 847 0116 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 848 011a C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 849 011e 1B68     		ldr	r3, [r3, #0]
 850 0120 032B     		cmp	r3, #3
 851 0122 2FD1     		bne	.L45
 198:../timerFunctionsLSM.c **** 	{
 199:../timerFunctionsLSM.c **** 
 200:../timerFunctionsLSM.c **** 		while(!I2C001_ReadData(&I2C001_Handle0,&accelerationXYZ[indexAccel]))
 852              		.loc 1 200 0
 853 0124 00BF     		nop
 854              	.L46:
 855              		.loc 1 200 0 is_stmt 0 discriminator 1
 856 0126 40F20003 		movw	r3, #:lower16:indexAccel
 857 012a C0F20003 		movt	r3, #:upper16:indexAccel
 858 012e 1B68     		ldr	r3, [r3, #0]
 859 0130 4FEA4302 		lsl	r2, r3, #1
 860 0134 40F20003 		movw	r3, #:lower16:accelerationXYZ
 861 0138 C0F20003 		movt	r3, #:upper16:accelerationXYZ
 862 013c D318     		adds	r3, r2, r3
 863 013e 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 864 0142 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 865 0146 1946     		mov	r1, r3
 866 0148 FFF7FEFF 		bl	I2C001_ReadData
 867 014c 0346     		mov	r3, r0
 868 014e 002B     		cmp	r3, #0
 869 0150 E9D0     		beq	.L46
 201:../timerFunctionsLSM.c **** 		{
 202:../timerFunctionsLSM.c **** 			;
 203:../timerFunctionsLSM.c **** 		}
 204:../timerFunctionsLSM.c **** 		indexAccel++;
 870              		.loc 1 204 0 is_stmt 1
 871 0152 40F20003 		movw	r3, #:lower16:indexAccel
 872 0156 C0F20003 		movt	r3, #:upper16:indexAccel
 873 015a 1B68     		ldr	r3, [r3, #0]
 874 015c 03F10102 		add	r2, r3, #1
 875 0160 40F20003 		movw	r3, #:lower16:indexAccel
 876 0164 C0F20003 		movt	r3, #:upper16:indexAccel
 877 0168 1A60     		str	r2, [r3, #0]
 205:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 878              		.loc 1 205 0
 879 016a 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 880 016e C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 881 0172 1B68     		ldr	r3, [r3, #0]
 882 0174 03F10102 		add	r2, r3, #1
 883 0178 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 884 017c C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 885 0180 1A60     		str	r2, [r3, #0]
 886 0182 AAE0     		b	.L37
 887              	.L45:
 206:../timerFunctionsLSM.c **** 
 207:../timerFunctionsLSM.c **** 	}
 208:../timerFunctionsLSM.c **** 	else if(4 == indexI2CreadBytes)
 888              		.loc 1 208 0
 889 0184 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 890 0188 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 891 018c 1B68     		ldr	r3, [r3, #0]
 892 018e 042B     		cmp	r3, #4
 893 0190 1FD1     		bne	.L47
 894              	.LBB16:
 209:../timerFunctionsLSM.c **** 	{
 210:../timerFunctionsLSM.c **** 		I2C001_DataType data4;
 211:../timerFunctionsLSM.c **** 
 212:../timerFunctionsLSM.c **** 		data4.Data1.TDF_Type = I2C_TDF_MRxAck0;
 895              		.loc 1 212 0
 896 0192 4FF00203 		mov	r3, #2
 897 0196 7B74     		strb	r3, [r7, #17]
 213:../timerFunctionsLSM.c **** 
 214:../timerFunctionsLSM.c **** 
 215:../timerFunctionsLSM.c **** 		data4.Data1.Data = ubyteFF;
 898              		.loc 1 215 0
 899 0198 4FF0FF03 		mov	r3, #255
 900 019c 3B74     		strb	r3, [r7, #16]
 216:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 901              		.loc 1 216 0
 902 019e 00BF     		nop
 903              	.L48:
 904              		.loc 1 216 0 is_stmt 0 discriminator 1
 905 01a0 07F11003 		add	r3, r7, #16
 906 01a4 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 907 01a8 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 908 01ac 1946     		mov	r1, r3
 909 01ae FFF7FEFF 		bl	I2C001_WriteData
 910 01b2 0346     		mov	r3, r0
 911 01b4 002B     		cmp	r3, #0
 912 01b6 F3D0     		beq	.L48
 217:../timerFunctionsLSM.c **** 		{
 218:../timerFunctionsLSM.c **** 			;
 219:../timerFunctionsLSM.c **** 		}
 220:../timerFunctionsLSM.c **** 
 221:../timerFunctionsLSM.c **** 		//}
 222:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 913              		.loc 1 222 0 is_stmt 1
 914 01b8 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 915 01bc C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 916 01c0 1B68     		ldr	r3, [r3, #0]
 917 01c2 03F10102 		add	r2, r3, #1
 918 01c6 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 919 01ca C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 920 01ce 1A60     		str	r2, [r3, #0]
 921 01d0 83E0     		b	.L37
 922              	.L47:
 923              	.LBE16:
 223:../timerFunctionsLSM.c **** 	}
 224:../timerFunctionsLSM.c **** 	else if(5 == indexI2CreadBytes)
 924              		.loc 1 224 0
 925 01d2 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 926 01d6 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 927 01da 1B68     		ldr	r3, [r3, #0]
 928 01dc 052B     		cmp	r3, #5
 929 01de 2FD1     		bne	.L49
 225:../timerFunctionsLSM.c **** 	{
 226:../timerFunctionsLSM.c **** 		while(!I2C001_ReadData(&I2C001_Handle0,&accelerationXYZ[indexAccel]))
 930              		.loc 1 226 0
 931 01e0 00BF     		nop
 932              	.L50:
 933              		.loc 1 226 0 is_stmt 0 discriminator 1
 934 01e2 40F20003 		movw	r3, #:lower16:indexAccel
 935 01e6 C0F20003 		movt	r3, #:upper16:indexAccel
 936 01ea 1B68     		ldr	r3, [r3, #0]
 937 01ec 4FEA4302 		lsl	r2, r3, #1
 938 01f0 40F20003 		movw	r3, #:lower16:accelerationXYZ
 939 01f4 C0F20003 		movt	r3, #:upper16:accelerationXYZ
 940 01f8 D318     		adds	r3, r2, r3
 941 01fa 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 942 01fe C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 943 0202 1946     		mov	r1, r3
 944 0204 FFF7FEFF 		bl	I2C001_ReadData
 945 0208 0346     		mov	r3, r0
 946 020a 002B     		cmp	r3, #0
 947 020c E9D0     		beq	.L50
 227:../timerFunctionsLSM.c **** 		{
 228:../timerFunctionsLSM.c **** 			;
 229:../timerFunctionsLSM.c **** 		}
 230:../timerFunctionsLSM.c **** 		indexAccel++;
 948              		.loc 1 230 0 is_stmt 1
 949 020e 40F20003 		movw	r3, #:lower16:indexAccel
 950 0212 C0F20003 		movt	r3, #:upper16:indexAccel
 951 0216 1B68     		ldr	r3, [r3, #0]
 952 0218 03F10102 		add	r2, r3, #1
 953 021c 40F20003 		movw	r3, #:lower16:indexAccel
 954 0220 C0F20003 		movt	r3, #:upper16:indexAccel
 955 0224 1A60     		str	r2, [r3, #0]
 231:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 956              		.loc 1 231 0
 957 0226 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 958 022a C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 959 022e 1B68     		ldr	r3, [r3, #0]
 960 0230 03F10102 		add	r2, r3, #1
 961 0234 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 962 0238 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 963 023c 1A60     		str	r2, [r3, #0]
 964 023e 4CE0     		b	.L37
 965              	.L49:
 232:../timerFunctionsLSM.c **** 	}
 233:../timerFunctionsLSM.c **** 	else if(6 == indexI2CreadBytes)
 966              		.loc 1 233 0
 967 0240 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 968 0244 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 969 0248 1B68     		ldr	r3, [r3, #0]
 970 024a 062B     		cmp	r3, #6
 971 024c 1FD1     		bne	.L51
 972              	.LBB17:
 234:../timerFunctionsLSM.c **** 	{
 235:../timerFunctionsLSM.c **** 		I2C001_DataType data5;
 236:../timerFunctionsLSM.c **** 
 237:../timerFunctionsLSM.c **** 		data5.Data1.TDF_Type = I2C_TDF_MRxAck1;
 973              		.loc 1 237 0
 974 024e 4FF00303 		mov	r3, #3
 975 0252 7B73     		strb	r3, [r7, #13]
 238:../timerFunctionsLSM.c **** 
 239:../timerFunctionsLSM.c **** 
 240:../timerFunctionsLSM.c **** 		data5.Data1.Data = ubyteFF;
 976              		.loc 1 240 0
 977 0254 4FF0FF03 		mov	r3, #255
 978 0258 3B73     		strb	r3, [r7, #12]
 241:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5))
 979              		.loc 1 241 0
 980 025a 00BF     		nop
 981              	.L52:
 982              		.loc 1 241 0 is_stmt 0 discriminator 1
 983 025c 07F10C03 		add	r3, r7, #12
 984 0260 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 985 0264 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 986 0268 1946     		mov	r1, r3
 987 026a FFF7FEFF 		bl	I2C001_WriteData
 988 026e 0346     		mov	r3, r0
 989 0270 002B     		cmp	r3, #0
 990 0272 F3D0     		beq	.L52
 242:../timerFunctionsLSM.c **** 		{
 243:../timerFunctionsLSM.c **** 			;
 244:../timerFunctionsLSM.c **** 		}
 245:../timerFunctionsLSM.c **** 
 246:../timerFunctionsLSM.c **** 		//}
 247:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 991              		.loc 1 247 0 is_stmt 1
 992 0274 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 993 0278 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 994 027c 1B68     		ldr	r3, [r3, #0]
 995 027e 03F10102 		add	r2, r3, #1
 996 0282 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 997 0286 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 998 028a 1A60     		str	r2, [r3, #0]
 999 028c 25E0     		b	.L37
 1000              	.L51:
 1001              	.LBE17:
 248:../timerFunctionsLSM.c **** 	}
 249:../timerFunctionsLSM.c **** 	else if(7 == indexI2CreadBytes)
 1002              		.loc 1 249 0
 1003 028e 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 1004 0292 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 1005 0296 1B68     		ldr	r3, [r3, #0]
 1006 0298 072B     		cmp	r3, #7
 1007 029a 1ED1     		bne	.L37
 1008              	.LBB18:
 250:../timerFunctionsLSM.c **** 	{
 251:../timerFunctionsLSM.c **** 		I2C001_DataType data6;
 252:../timerFunctionsLSM.c **** 		data6.Data1.TDF_Type = I2C_TDF_MStop;
 1009              		.loc 1 252 0
 1010 029c 4FF00603 		mov	r3, #6
 1011 02a0 7B72     		strb	r3, [r7, #9]
 253:../timerFunctionsLSM.c **** 		data6.Data1.Data = ubyteFF;
 1012              		.loc 1 253 0
 1013 02a2 4FF0FF03 		mov	r3, #255
 1014 02a6 3B72     		strb	r3, [r7, #8]
 254:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data6));
 1015              		.loc 1 254 0
 1016 02a8 00BF     		nop
 1017              	.L53:
 1018              		.loc 1 254 0 is_stmt 0 discriminator 1
 1019 02aa 07F10803 		add	r3, r7, #8
 1020 02ae 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 1021 02b2 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 1022 02b6 1946     		mov	r1, r3
 1023 02b8 FFF7FEFF 		bl	I2C001_WriteData
 1024 02bc 0346     		mov	r3, r0
 1025 02be 002B     		cmp	r3, #0
 1026 02c0 F3D0     		beq	.L53
 255:../timerFunctionsLSM.c **** 		indexI2CreadBytes++;
 1027              		.loc 1 255 0 is_stmt 1
 1028 02c2 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 1029 02c6 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 1030 02ca 1B68     		ldr	r3, [r3, #0]
 1031 02cc 03F10102 		add	r2, r3, #1
 1032 02d0 40F20003 		movw	r3, #:lower16:indexI2CreadBytes
 1033 02d4 C0F20003 		movt	r3, #:upper16:indexI2CreadBytes
 1034 02d8 1A60     		str	r2, [r3, #0]
 1035              	.L37:
 1036              	.LBE18:
 256:../timerFunctionsLSM.c **** 	}
 257:../timerFunctionsLSM.c **** }
 1037              		.loc 1 257 0
 1038 02da 07F12007 		add	r7, r7, #32
 1039 02de BD46     		mov	sp, r7
 1040 02e0 80BD     		pop	{r7, pc}
 1041              		.cfi_endproc
 1042              	.LFE115:
 1044 02e2 00BF     		.section	.text.timerHandlerI2CwriteByte,"ax",%progbits
 1045              		.align	2
 1046              		.global	timerHandlerI2CwriteByte
 1047              		.thumb
 1048              		.thumb_func
 1050              	timerHandlerI2CwriteByte:
 1051              	.LFB116:
 258:../timerFunctionsLSM.c **** 
 259:../timerFunctionsLSM.c **** void timerHandlerI2CwriteByte(void *T)
 260:../timerFunctionsLSM.c **** {
 1052              		.loc 1 260 0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 24
 1055              		@ frame_needed = 1, uses_anonymous_args = 0
 1056 0000 80B5     		push	{r7, lr}
 1057              	.LCFI12:
 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 7, -8
 1060              		.cfi_offset 14, -4
 1061 0002 86B0     		sub	sp, sp, #24
 1062              	.LCFI13:
 1063              		.cfi_def_cfa_offset 32
 1064 0004 00AF     		add	r7, sp, #0
 1065              	.LCFI14:
 1066              		.cfi_def_cfa_register 7
 1067 0006 7860     		str	r0, [r7, #4]
 1068 0008 00E0     		b	.L65
 1069              	.L66:
 261:../timerFunctionsLSM.c **** 	while(1){
 262:../timerFunctionsLSM.c **** 	if(0 == indexI2CwriteByte)
 263:../timerFunctionsLSM.c **** 	{
 264:../timerFunctionsLSM.c **** 		I2C001_DataType data1;
 265:../timerFunctionsLSM.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 266:../timerFunctionsLSM.c **** 		data1.Data1.Data = ((addressTimerWrite<<1) | I2C_WRITE);
 267:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
 268:../timerFunctionsLSM.c **** 		indexI2CwriteByte++;
 269:../timerFunctionsLSM.c **** 		delay();
 270:../timerFunctionsLSM.c **** 	}
 271:../timerFunctionsLSM.c **** 	else if(1 == indexI2CwriteByte)
 272:../timerFunctionsLSM.c **** 	{
 273:../timerFunctionsLSM.c **** 		I2C001_DataType data2;
 274:../timerFunctionsLSM.c **** 		data2.Data1.TDF_Type = I2C_TDF_MTxData;
 275:../timerFunctionsLSM.c **** 		data2.Data1.Data = subAddressTimerWrite;
 276:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2));
 277:../timerFunctionsLSM.c **** 		indexI2CwriteByte++;
 278:../timerFunctionsLSM.c **** 		delay();
 279:../timerFunctionsLSM.c **** 	}
 280:../timerFunctionsLSM.c **** 	else if(2 == indexI2CwriteByte)
 281:../timerFunctionsLSM.c **** 	{
 282:../timerFunctionsLSM.c **** 		I2C001_DataType data3;
 283:../timerFunctionsLSM.c **** 		data3.Data1.TDF_Type = I2C_TDF_MTxData;
 284:../timerFunctionsLSM.c **** 		data3.Data1.Data = dataWrite;
 285:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
 286:../timerFunctionsLSM.c **** 		indexI2CwriteByte++;
 287:../timerFunctionsLSM.c **** 		delay();
 288:../timerFunctionsLSM.c **** 	}
 289:../timerFunctionsLSM.c **** 	else if(3 == indexI2CwriteByte)
 290:../timerFunctionsLSM.c **** 	{
 291:../timerFunctionsLSM.c **** 		I2C001_DataType data4;
 292:../timerFunctionsLSM.c **** 		data4.Data1.TDF_Type = I2C_TDF_MStop;
 293:../timerFunctionsLSM.c **** 		data4.Data1.Data = ubyteFF;
 294:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4));
 295:../timerFunctionsLSM.c **** 		indexI2CwriteByte++;
 296:../timerFunctionsLSM.c **** 		delay();
 297:../timerFunctionsLSM.c **** 	}
 298:../timerFunctionsLSM.c **** 	else if(4 == indexI2CwriteByte)
 299:../timerFunctionsLSM.c **** 	{
 300:../timerFunctionsLSM.c **** 		break;
 301:../timerFunctionsLSM.c **** 	}
 302:../timerFunctionsLSM.c **** 	}
 1070              		.loc 1 302 0
 1071 000a 00BF     		nop
 1072              	.L65:
 262:../timerFunctionsLSM.c **** 	if(0 == indexI2CwriteByte)
 1073              		.loc 1 262 0
 1074 000c 40F20003 		movw	r3, #:lower16:indexI2CwriteByte
 1075 0010 C0F20003 		movt	r3, #:upper16:indexI2CwriteByte
 1076 0014 1B68     		ldr	r3, [r3, #0]
 1077 0016 002B     		cmp	r3, #0
 1078 0018 27D1     		bne	.L55
 1079              	.LBB19:
 265:../timerFunctionsLSM.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 1080              		.loc 1 265 0
 1081 001a 4FF00403 		mov	r3, #4
 1082 001e 7B75     		strb	r3, [r7, #21]
 266:../timerFunctionsLSM.c **** 		data1.Data1.Data = ((addressTimerWrite<<1) | I2C_WRITE);
 1083              		.loc 1 266 0
 1084 0020 40F20003 		movw	r3, #:lower16:addressTimerWrite
 1085 0024 C0F20003 		movt	r3, #:upper16:addressTimerWrite
 1086 0028 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1087 002a 4FEA4303 		lsl	r3, r3, #1
 1088 002e DBB2     		uxtb	r3, r3
 1089 0030 3B75     		strb	r3, [r7, #20]
 267:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
 1090              		.loc 1 267 0
 1091 0032 00BF     		nop
 1092              	.L56:
 267:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
 1093              		.loc 1 267 0 is_stmt 0 discriminator 1
 1094 0034 07F11403 		add	r3, r7, #20
 1095 0038 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 1096 003c C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 1097 0040 1946     		mov	r1, r3
 1098 0042 FFF7FEFF 		bl	I2C001_WriteData
 1099 0046 0346     		mov	r3, r0
 1100 0048 002B     		cmp	r3, #0
 1101 004a F3D0     		beq	.L56
 268:../timerFunctionsLSM.c **** 		indexI2CwriteByte++;
 1102              		.loc 1 268 0 is_stmt 1
 1103 004c 40F20003 		movw	r3, #:lower16:indexI2CwriteByte
 1104 0050 C0F20003 		movt	r3, #:upper16:indexI2CwriteByte
 1105 0054 1B68     		ldr	r3, [r3, #0]
 1106 0056 03F10102 		add	r2, r3, #1
 1107 005a 40F20003 		movw	r3, #:lower16:indexI2CwriteByte
 1108 005e C0F20003 		movt	r3, #:upper16:indexI2CwriteByte
 1109 0062 1A60     		str	r2, [r3, #0]
 269:../timerFunctionsLSM.c **** 		delay();
 1110              		.loc 1 269 0
 1111 0064 FFF7FEFF 		bl	delay
 1112              	.LBE19:
 1113              		.loc 1 302 0
 1114 0068 CFE7     		b	.L66
 1115              	.L55:
 271:../timerFunctionsLSM.c **** 	else if(1 == indexI2CwriteByte)
 1116              		.loc 1 271 0
 1117 006a 40F20003 		movw	r3, #:lower16:indexI2CwriteByte
 1118 006e C0F20003 		movt	r3, #:upper16:indexI2CwriteByte
 1119 0072 1B68     		ldr	r3, [r3, #0]
 1120 0074 012B     		cmp	r3, #1
 1121 0076 24D1     		bne	.L58
 1122              	.LBB20:
 274:../timerFunctionsLSM.c **** 		data2.Data1.TDF_Type = I2C_TDF_MTxData;
 1123              		.loc 1 274 0
 1124 0078 4FF00003 		mov	r3, #0
 1125 007c 7B74     		strb	r3, [r7, #17]
 275:../timerFunctionsLSM.c **** 		data2.Data1.Data = subAddressTimerWrite;
 1126              		.loc 1 275 0
 1127 007e 40F20003 		movw	r3, #:lower16:subAddressTimerWrite
 1128 0082 C0F20003 		movt	r3, #:upper16:subAddressTimerWrite
 1129 0086 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1130 0088 3B74     		strb	r3, [r7, #16]
 276:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2));
 1131              		.loc 1 276 0
 1132 008a 00BF     		nop
 1133              	.L59:
 276:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2));
 1134              		.loc 1 276 0 is_stmt 0 discriminator 1
 1135 008c 07F11003 		add	r3, r7, #16
 1136 0090 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 1137 0094 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 1138 0098 1946     		mov	r1, r3
 1139 009a FFF7FEFF 		bl	I2C001_WriteData
 1140 009e 0346     		mov	r3, r0
 1141 00a0 002B     		cmp	r3, #0
 1142 00a2 F3D0     		beq	.L59
 277:../timerFunctionsLSM.c **** 		indexI2CwriteByte++;
 1143              		.loc 1 277 0 is_stmt 1
 1144 00a4 40F20003 		movw	r3, #:lower16:indexI2CwriteByte
 1145 00a8 C0F20003 		movt	r3, #:upper16:indexI2CwriteByte
 1146 00ac 1B68     		ldr	r3, [r3, #0]
 1147 00ae 03F10102 		add	r2, r3, #1
 1148 00b2 40F20003 		movw	r3, #:lower16:indexI2CwriteByte
 1149 00b6 C0F20003 		movt	r3, #:upper16:indexI2CwriteByte
 1150 00ba 1A60     		str	r2, [r3, #0]
 278:../timerFunctionsLSM.c **** 		delay();
 1151              		.loc 1 278 0
 1152 00bc FFF7FEFF 		bl	delay
 1153              	.LBE20:
 1154              		.loc 1 302 0
 1155 00c0 A3E7     		b	.L66
 1156              	.L58:
 280:../timerFunctionsLSM.c **** 	else if(2 == indexI2CwriteByte)
 1157              		.loc 1 280 0
 1158 00c2 40F20003 		movw	r3, #:lower16:indexI2CwriteByte
 1159 00c6 C0F20003 		movt	r3, #:upper16:indexI2CwriteByte
 1160 00ca 1B68     		ldr	r3, [r3, #0]
 1161 00cc 022B     		cmp	r3, #2
 1162 00ce 24D1     		bne	.L60
 1163              	.LBB21:
 283:../timerFunctionsLSM.c **** 		data3.Data1.TDF_Type = I2C_TDF_MTxData;
 1164              		.loc 1 283 0
 1165 00d0 4FF00003 		mov	r3, #0
 1166 00d4 7B73     		strb	r3, [r7, #13]
 284:../timerFunctionsLSM.c **** 		data3.Data1.Data = dataWrite;
 1167              		.loc 1 284 0
 1168 00d6 40F20003 		movw	r3, #:lower16:dataWrite
 1169 00da C0F20003 		movt	r3, #:upper16:dataWrite
 1170 00de 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1171 00e0 3B73     		strb	r3, [r7, #12]
 285:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
 1172              		.loc 1 285 0
 1173 00e2 00BF     		nop
 1174              	.L61:
 285:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
 1175              		.loc 1 285 0 is_stmt 0 discriminator 1
 1176 00e4 07F10C03 		add	r3, r7, #12
 1177 00e8 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 1178 00ec C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 1179 00f0 1946     		mov	r1, r3
 1180 00f2 FFF7FEFF 		bl	I2C001_WriteData
 1181 00f6 0346     		mov	r3, r0
 1182 00f8 002B     		cmp	r3, #0
 1183 00fa F3D0     		beq	.L61
 286:../timerFunctionsLSM.c **** 		indexI2CwriteByte++;
 1184              		.loc 1 286 0 is_stmt 1
 1185 00fc 40F20003 		movw	r3, #:lower16:indexI2CwriteByte
 1186 0100 C0F20003 		movt	r3, #:upper16:indexI2CwriteByte
 1187 0104 1B68     		ldr	r3, [r3, #0]
 1188 0106 03F10102 		add	r2, r3, #1
 1189 010a 40F20003 		movw	r3, #:lower16:indexI2CwriteByte
 1190 010e C0F20003 		movt	r3, #:upper16:indexI2CwriteByte
 1191 0112 1A60     		str	r2, [r3, #0]
 287:../timerFunctionsLSM.c **** 		delay();
 1192              		.loc 1 287 0
 1193 0114 FFF7FEFF 		bl	delay
 1194              	.LBE21:
 1195              		.loc 1 302 0
 1196 0118 77E7     		b	.L66
 1197              	.L60:
 289:../timerFunctionsLSM.c **** 	else if(3 == indexI2CwriteByte)
 1198              		.loc 1 289 0
 1199 011a 40F20003 		movw	r3, #:lower16:indexI2CwriteByte
 1200 011e C0F20003 		movt	r3, #:upper16:indexI2CwriteByte
 1201 0122 1B68     		ldr	r3, [r3, #0]
 1202 0124 032B     		cmp	r3, #3
 1203 0126 21D1     		bne	.L62
 1204              	.LBB22:
 292:../timerFunctionsLSM.c **** 		data4.Data1.TDF_Type = I2C_TDF_MStop;
 1205              		.loc 1 292 0
 1206 0128 4FF00603 		mov	r3, #6
 1207 012c 7B72     		strb	r3, [r7, #9]
 293:../timerFunctionsLSM.c **** 		data4.Data1.Data = ubyteFF;
 1208              		.loc 1 293 0
 1209 012e 4FF0FF03 		mov	r3, #255
 1210 0132 3B72     		strb	r3, [r7, #8]
 294:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4));
 1211              		.loc 1 294 0
 1212 0134 00BF     		nop
 1213              	.L63:
 294:../timerFunctionsLSM.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4));
 1214              		.loc 1 294 0 is_stmt 0 discriminator 1
 1215 0136 07F10803 		add	r3, r7, #8
 1216 013a 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 1217 013e C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 1218 0142 1946     		mov	r1, r3
 1219 0144 FFF7FEFF 		bl	I2C001_WriteData
 1220 0148 0346     		mov	r3, r0
 1221 014a 002B     		cmp	r3, #0
 1222 014c F3D0     		beq	.L63
 295:../timerFunctionsLSM.c **** 		indexI2CwriteByte++;
 1223              		.loc 1 295 0 is_stmt 1
 1224 014e 40F20003 		movw	r3, #:lower16:indexI2CwriteByte
 1225 0152 C0F20003 		movt	r3, #:upper16:indexI2CwriteByte
 1226 0156 1B68     		ldr	r3, [r3, #0]
 1227 0158 03F10102 		add	r2, r3, #1
 1228 015c 40F20003 		movw	r3, #:lower16:indexI2CwriteByte
 1229 0160 C0F20003 		movt	r3, #:upper16:indexI2CwriteByte
 1230 0164 1A60     		str	r2, [r3, #0]
 296:../timerFunctionsLSM.c **** 		delay();
 1231              		.loc 1 296 0
 1232 0166 FFF7FEFF 		bl	delay
 1233              	.LBE22:
 1234              		.loc 1 302 0
 1235 016a 4EE7     		b	.L66
 1236              	.L62:
 298:../timerFunctionsLSM.c **** 	else if(4 == indexI2CwriteByte)
 1237              		.loc 1 298 0
 1238 016c 40F20003 		movw	r3, #:lower16:indexI2CwriteByte
 1239 0170 C0F20003 		movt	r3, #:upper16:indexI2CwriteByte
 1240 0174 1B68     		ldr	r3, [r3, #0]
 1241 0176 042B     		cmp	r3, #4
 1242 0178 7FF447AF 		bne	.L66
 300:../timerFunctionsLSM.c **** 		break;
 1243              		.loc 1 300 0
 1244 017c 00BF     		nop
 303:../timerFunctionsLSM.c **** }
 1245              		.loc 1 303 0
 1246 017e 07F11807 		add	r7, r7, #24
 1247 0182 BD46     		mov	sp, r7
 1248 0184 80BD     		pop	{r7, pc}
 1249              		.cfi_endproc
 1250              	.LFE116:
 1252 0186 00BF     		.text
 1253              	.Letext0:
 1254              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 1255              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1256              		.file 4 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor\\Dave\\Generated\\inc\\DAVESupport/../../inc/
 1257              		.file 5 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor\\Dave\\Generated\\inc\\DAVESupport/../../inc/
 1258              		.file 6 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor\\Dave\\Generated\\inc\\DAVESupport/../../inc/
 1259              		.file 7 "../LSM9DS1_Types.h"
 1260              		.file 8 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 1261              		.file 9 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor\\Dave\\Generated\\inc\\DAVESupport/../../inc/
 1262              		.file 10 "../LSM9DS1_drivers.h"
DEFINED SYMBOLS
                            *ABS*:00000000 timerFunctionsLSM.c
                            *COM*:00000004 TimerId
                            *COM*:00000004 Status
                            *COM*:00000004 WriteTimerId
                            *COM*:00000004 WriteTimerStatus
                            *COM*:00000004 TimerIdReadBytes
                            *COM*:00000004 StatusReadBytes
                            *COM*:00000028 settings
                            *COM*:0000000c gBias
                            *COM*:0000000c aBias
                            *COM*:0000000c mBias
                            *COM*:00000006 gBiasRaw
                            *COM*:00000006 aBiasRaw
                            *COM*:00000006 mBiasRaw
                            *COM*:00000001 _autoCalc
                            *COM*:00000001 _mAddress
                            *COM*:00000001 _xgAddress
                            *COM*:00000004 gRes
                            *COM*:00000004 aRes
                            *COM*:00000004 mRes
                            *COM*:00000002 gx
                            *COM*:00000002 gy
                            *COM*:00000002 gz
                            *COM*:00000002 ax
                            *COM*:00000002 ay
                            *COM*:00000002 az
                            *COM*:00000002 mx
                            *COM*:00000002 my
                            *COM*:00000002 mz
                            *COM*:00000002 temperature
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:53     .bss:00000000 indexI2CreadByte
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:50     .bss:00000000 $d
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:58     .bss:00000004 addressTimer
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:63     .bss:00000005 subAddressTimer
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:69     .bss:00000006 DataReceive2
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:75     .bss:00000008 indexI2CreadBytes
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:80     .bss:0000000c addressTimerI2CReadBytes
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:85     .bss:0000000d subAddressTimerI2CReadBytes
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:91     .bss:00000010 indexI2CwriteByte
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:96     .bss:00000014 addressTimerWrite
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:101    .bss:00000015 subAddressTimerWrite
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:106    .bss:00000016 dataWrite
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:112    .bss:00000018 accelerationXYZ
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:115    .text.timerHandlerI2CreadByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:120    .text.timerHandlerI2CreadByte:00000000 timerHandlerI2CreadByte
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:386    .text.delay:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:391    .text.delay:00000000 delay
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:434    .text.timerHandlerI2CreadBytes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:439    .text.timerHandlerI2CreadBytes:00000000 timerHandlerI2CreadBytes
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:703    .text.timerHandlerI2CreadBytes1:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:708    .text.timerHandlerI2CreadBytes1:00000000 timerHandlerI2CreadBytes1
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:1045   .text.timerHandlerI2CwriteByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUBBOfr.s:1050   .text.timerHandlerI2CwriteByte:00000000 timerHandlerI2CwriteByte
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.35166846b5321d4273ad8c4248893ac3
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.MULTIPLEXER.h.46.4a863fbae1c79f0db26da3ce2dc30d02
                           .group:00000000 wm4.CCU8PWMLIB.h.74.725ec81203769525cc7a424597055f47
                           .group:00000000 wm4.MOTORLIB.h.62.951091d95913dd2ff36d761323a1771d
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.uc_id.h.35.fa57ecd9f559d2767f56c96da2848c12
                           .group:00000000 wm4.CLK001_Const.h.50.e5e9c2ddc89f4cc9e7b93e9648fa94e4
                           .group:00000000 wm4.CLK001_Conf.h.81.82a8db895dc146da001475dd68223522
                           .group:00000000 wm4.Usic.h.54.8af9f733ba5771eeb374435d205ea54b
                           .group:00000000 wm4.UART001_Conf.h.53.ea28968cb6c53b1be9f53a4d9f42a86f
                           .group:00000000 wm4.IO004.h.53.442ea5eb47ad9eedc675253aa35f3107
                           .group:00000000 wm4.SYSTM001.h.64.6ecb31c49bc3e7691644fdcdfc11b5cd
                           .group:00000000 wm4.I2C001.h.97.5277d52889d6c741e048ea45ee1277b5
                           .group:00000000 wm4.I2C001_Conf.h.58.e471e519f7471a50493b6f4fe912ee0d
                           .group:00000000 wm4.LSM9DS1_drivers.h.9.225085f752270af24a0df342ed7d3479
                           .group:00000000 wm4.LSM9DS1_Registers.h.9.72af380d6da01de607f77d245bf32825
                           .group:00000000 wm4.stdio.h.31.f48311dde756a2aec27351b58a280fb9
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.161.c6104a0666cf681b6269ddc9b4f516d4
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76

UNDEFINED SYMBOLS
I2C001_Handle0
I2C001_WriteData
I2C001_ReadData
indexAccel
